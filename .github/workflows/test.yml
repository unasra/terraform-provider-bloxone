# This GitHub action runs your tests for each commit push and/or PR.
name: Build
on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - 'examples/**'

jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Setup Go 1.19
        uses: actions/setup-go@v4.1.0
        with:
          go-version: '1.19'
        id: go
      - name: Check out the code into the Go module directory
        uses: actions/checkout@v4.1.1
      - name: Get dependencies
        run: |
          go mod download
      - name: Build
        run: |
          go build -v ./b1ddi/b1ddi
          
  lint:
    name: Go Linter
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: build
    steps:
      - name: Setup Go 1.19
        uses: actions/setup-go@v4.1.0
        with:
          go-version: '1.19'
        id: go

      - name: Check out the code into the Go module directory
        uses: actions/checkout@v4.1.1

      # Run go lint on the code
      - name: Run go lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
          golangci-lint run --max-issues-per-linter 0 --max-same-issues 0 --timeout 10m

  tf-lint:
    name: Terraform lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: build
    steps:
      - uses: actions/checkout@v4.1.1
        name: Checkout source code

      - uses: actions/cache@v3
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: v0.44.1

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run TFLint
        run: tflint -f compact

  tf-sec:
    name: Terraform Security scanner
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: build
    steps:
      - name: Clone repo
        uses: actions/checkout@master
      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true
          
  tests:
    name: Terraform acceptance tests
    runs-on: ubuntu-latest
    environment: testing
    needs: build
    steps:
      - name: Setup Go 1.19
        uses: actions/setup-go@v4.1.0
        with:
          go-version: '1.19'
        id: go
      - name: Check out the code into the Go module directory
        uses: actions/checkout@v4.1.1
      - name: Get dependencies
        run: |
          go mod download
      - name: Run tests
        timeout-minutes: 10
        env:
          TF_ACC: "1"
          B1DDI_HOST: ${{ secrets.BLOXONE_HOST }}
          B1DDI_API_KEY: ${{ secrets.BLOXONE_API_KEY }}
          DHCP_HOST: ${{ secrets.DHCP_HOST }}
          DNS_HOST: ${{ secrets.DNS_HOST }}
        run: |
          #go test -v -cover ./internal/...
          go test -v -cover ./b1ddi/b1ddi
